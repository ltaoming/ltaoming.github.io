"projectData": "[{\"_id\":\"634ac0037122f4a32ffff519\",\"img\":\"/assets/img/covid.jpg\",\"title\":\"ByteVid 1st Place\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":true,\"Java\":true,\"HTML\":true,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":true,\"Full Stack\":true,\"Back End\":true,\"Front End\":true}},\"url\":\"https://github.com/ayaka14732/ByteVid\",\"demoUrl\":\"https://me.tjh.sg/blog/bytevid/\",\"desc\":\"- Developed for NTU MLDA Deep Learning Week Hackathon in 48 hours (1/10/2022 - 3/10/2022).\\n- Achieved 1st place out of 120 teams.\\n  - Detailed explanation of our solution: [https://me.tjh.sg/blog/bytevid](https://me.tjh.sg/blog/bytevid)\\n\\n### Project Description\\nSay goodbye to long and boring videos! üëã\\n\\nPowered by the cutting-edge deep learning technologies in 2022, ByteVid transforms long, boring videos into fun byte-sized content.\\n\\nBe it a one hour long lecture, or a 30-minute zoom meeting, ByteVid can transcribe, summarise the content, extract keywords, detect and extract important slides from the video, and translate into other languages.\\n\\n### Deep Learning\\n- Whisper: SOTA speech recognition (Sep 2022)\\n- YOLOv7: SOTA object detection (Jul 2022)\\n- KBIR-inspec: key phrase extraction (Dec 2021)\\n- Bert Extractive Summarizer: summarisation (Jun 2019)\\n- BlingFire: sentence extraction\\n- Baidu Translate API: translation\\n\\n### Frontend\\n- React.js\\n- Tailwind CSS\\n- Deploy on GitHub pages\\n\\n### Backend\\n- Flask server\\n- Deploy on a GPU machine\\n- Relay to an Internet-facing VPS\\n- Nginx reverse proxy\\n- Cloudflare protection\\n\\n### Tools\\n- OpenCV\\n- youtube-dl\\n- ffmpeg\",\"order\":-6},{\"_id\":\"633281d353d373a940186f6c\",\"img\":\"/images/travis.png\",\"title\":\"TraViS - Transformer Attention Visualiser\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":true,\"HTML\":true,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":true,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://github.com/ayaka14732/TrAVis\",\"demoUrl\":\"https://ayaka14732.github.io/TrAVis/\",\"desc\":\"- Developed a mobile-responsive web app that visualises the attention mechanism of Transformer-based model (BERT) in HTML, CSS, JavaScript, and D3.js\\n- Executed the BERT model directly in browser (client-side)\\n- Received more than 28 stars on the GitHub repository\",\"order\":-5},{\"_id\":\"633280f953d373a940186f6b\",\"img\":\"/images/word-piece-tokenizer.png\",\"title\":\"Word Piece Tokenizer\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":true,\"Automation\":false,\"Games\":false,\"Machine Learning\":true,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/word-piece-tokenizer\",\"demoUrl\":\"https://pypi.org/project/word-piece-tokenizer/\",\"desc\":\"- Developed a Python library that implements a modified, lightweight version of HuggingFace BERT Tokenizer in pure Python \\n- My tokenizer can maintain high performance in resource-limited devices like embedded systems and web browsers\\n-  My tokenizer is 57% faster than the original HuggingFace BERT Tokenizer\",\"order\":-4},{\"_id\":\"6322e03bafadf90510d1ae1a\",\"img\":\"https://img.youtube.com/vi/WL4-_uzH2Ec/0.jpg\",\"title\":\"Complex E-learning Platform\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":true,\"HTML\":true,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://gist.github.com/ztjhz/ba045cfc4811b82e97e840819449fd98#file-1-trehaus-md\",\"demoUrl\":\"\",\"desc\":\"### üë®‚Äçüíª Work\\n\\n- Singlehandedly developed from scratch an interactive and complex e-learning platform and marketplace in Typescript and React\\n- Collaborated effectively with UI/UX designer, backend developer, and clients from different countries\\n\\n### ü•á Achievement\\n\\n- Received high praises from CTO and was given a return offer\\n\\n### üìö Tech Stack\\n\\n- TypeScript, React.js, MUI\\n\",\"order\":-3},{\"_id\":\"628aec44a60ff6d0e9c45b4b\",\"img\":\"/images/zendodo.jpeg\",\"title\":\"NFT Gaming Web App\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":true,\"HTML\":true,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://gist.github.com/ztjhz/ba045cfc4811b82e97e840819449fd98#file-2-zendodo-md\",\"demoUrl\":\"\",\"desc\":\"### üë®‚Äçüíª Work\\n\\n- Developed a blockchain NFT gaming web application in TypeScript, Sass and Next.js (React)\\n- Engineered reusable components to speed up development efficiency and improve code quality\\n\\n### ü•á Achievement\\n\\n- Awarded performance bonus for outstanding performance\\n\\n### üìö Tech Stack\\n\\n- SASS, TypeScript, Next.js (React)\\n- Blockchain API\",\"order\":-2},{\"_id\":\"624636795ebd37d5a2025d28\",\"img\":\"/images/pokeapp.jpeg\",\"title\":\"PokeApp\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":true,\"HTML\":true,\"Django\":true,\"AWS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":true,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/PokeApp\",\"demoUrl\":\"http://ec2-54-179-68-12.ap-southeast-1.compute.amazonaws.com/\",\"desc\":\"- Developed full stack web application with React.js, Redux, Django, and Django-Rest-Framework; Utilized Djoser and JWTAuthentication for authentication\\n- Deployed frontend and backend to AWS EC2, and database to AWS RDS (postgresql)\",\"order\":-1},{\"_id\":\"628aecfaa60ff6d0e9c45b4c\",\"img\":\"/images/recsolar.png\",\"title\":\"Maintenance Checklist App\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":false,\"AWS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":true,\"Back End\":false,\"Front End\":false}},\"url\":\"https://gist.github.com/ztjhz/ba045cfc4811b82e97e840819449fd98#file-3-recsolar-md\",\"demoUrl\":\"\",\"desc\":\"### üíª Work\\n\\n- Developed frontend mobile application using PowerApps\\n- Designed and optimised relational database to reduce redundancy\\n- Performed rigorous testing to identify and fix bugs\\n- Published clear and effective documentations for users and developers\\n- Organized meetings with stakeholders\\n\\n### ü•á Achievement\\n\\n- Improved maintenance efficiency by _25%_, and reduced paper wastage by _15%_\\n- Exceeded expectations and received outstanding commendation and monetary award\\n\\n### üìö Tech Stack\\n\\n- PowerApps, PowerFx, PowerAutomate\",\"order\":0},{\"_id\":\"628af2613378731a15e04086\",\"img\":\"/images/anifame.png\",\"title\":\"Anime Success Predictor\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":false,\"CSS\":false},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":true,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/SC1015-Project\",\"demoUrl\":\"\",\"desc\":\"This project aims to maximize studios‚Äô profits on anime they produce by estimating 'mean' rating of anime and predicting 'success' probability before production, hence giving studios the ability to fine-tune the anime before production\\n\\n\\n\\n\\n### Data collection\\n- MyAnimeList API\\n### Data cleaning and preprocessing - JSON conversion and manipulation\\n- Feature engineering and generation\\n- One-hot Encoding\\n### EDA \u0026 Visualization\\n- Matplotlib, Seaborn\\n\\n### Regression - Linear regression\\n- Lasso regression\\n- Ridge regression\\n### Classification\\n- LinearSVC\\n- Decision Tree\\n- Random Forest\",\"order\":0},{\"_id\":\"61ac36d169fb606639ecfe99\",\"img\":\"/images/financetracker.gif\",\"title\":\"Personal Finance Tracker\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":true,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/crypto-portfolio\",\"demoUrl\":\"\",\"desc\":\"- Developed tracker in Python with Pandas, NumPy, Matplotlib and Selenium\\n- Designed SQL (SQLite) database to store portfolio data\\n- Created web graph in JavaScript to visually display portfolio data\\n- Reduced portfolio tracking time by 45%\",\"order\":1},{\"_id\":\"61ac36d169fb606639ecfe98\",\"img\":\"/images/pathfinding.gif\",\"title\":\"Pathfinding Visualizer\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":true,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://github.com/ztjhz/pathfinding-visualiser\",\"demoUrl\":\"https://ztjhz.github.io/pathfinding-visualiser/\",\"desc\":\"- Developed a web application that visualizes pathfinding in React\\n- Implemented popular pathfinding algorithms in JavaScript (A*, Greedy Best First Search, Breadth First Search and Dijkstra's)\\n- Increased students‚Äô understanding of pathfinding algorithms\",\"order\":1},{\"_id\":\"61ac36d169fb606639ecfe97\",\"img\":\"/images/memories.gif\",\"title\":\"Memories\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":true,\"ExpressJS\":true,\"NodeJs\":true,\"CSS\":true,\"HTML\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":true,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/memories-web-app\",\"demoUrl\":\"https://tjh-memories-app.netlify.app/\",\"desc\":\"- Developed full stack web application (**MongoDB, Express.js, React.js, Node.js**)\\n- Designed **API** to create, edit, delete, like and view posts. (**CRUD**)\\n- Implemented login authentication\",\"order\":2},{\"_id\":\"61ac36d169fb606639ecfe9a\",\"img\":\"/images/portfolio.gif\",\"title\":\"Personal Portfolio Website\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":true,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"\",\"demoUrl\":\"https://tohjinghua.com/\",\"desc\":\"- Developed a website using Next.js (React.js) to feature the projects that I have done\\n- Managed data in MongoDB\",\"order\":3},{\"_id\":\"61ac36d169fb606639ecfe9b\",\"img\":\"/images/demand_forecast.gif\",\"title\":\"Food Stock Demand Forecast\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":true,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/food-stock-demand-forecast\",\"demoUrl\":\"https://devpost.com/software/food-stock-demand-forecast\",\"desc\":\"- Cleaned dataset with Python, Pandas and NumPy \\n- Modelled food demand using Time Series Analysis with statsmodel\\n- Visualised data with matplotlib, and JavaScript web app \\n- [Repo](https://github.com/ztjhz/food-stock-demand-forecast)\",\"order\":4},{\"_id\":\"61ac36d169fb606639ecfe9c\",\"img\":\"/images/timetable.gif\",\"title\":\"Timetable Convertor\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":true,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/generate_class_schedule_ics\",\"demoUrl\":\"https://ztjhz.github.io/generate_class_schedule_ics/\",\"desc\":\"- Developed a web application that automates the conversion of text timetable to iCal format in JavaScript\",\"order\":5},{\"_id\":\"61ac36d169fb606639ecfe9d\",\"img\":\"/images/sortingvisualizer.gif\",\"title\":\"Sorting Visualizer\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":true,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://github.com/ztjhz/sorting-visualiser\",\"demoUrl\":\"https://ztjhz.github.io/sorting-visualiser/\",\"desc\":\"- Developed a web application that visualizes sorting in React\\n- Implemented popular sorting algorithms in JavaScript (quick sort, bubble sort, insertion sort, merge sort, selection sort)\\n- Increased students‚Äô understanding of sorting algorithms\",\"order\":6},{\"_id\":\"61ac36d169fb606639ecfe9e\",\"img\":\"/images/netflixclone.gif\",\"title\":\"Netflix Clone (Frontend)\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":true,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":true}},\"url\":\"https://github.com/ztjhz/netflix-clone\",\"demoUrl\":\"https://netflix-clone-b1846.web.app/\",\"desc\":\"- Replicated Netflix‚Äôs front-end using React \\n- Operated TMDB API for TV shows data\",\"order\":7},{\"_id\":\"61ac36d169fb606639ecfe9f\",\"img\":\"/images/hashtablec.gif\",\"title\":\"Hash Table in C\",\"tags\":{\"language\":{\"Python\":false,\"C\":true,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false},\"category\":{\"Algorithms \u0026 Data Structures\":true,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/Hash-Table-in-C\",\"demoUrl\":\"\",\"desc\":\"Implemented Hash Table in C\",\"order\":8},{\"_id\":\"61b7329ad1557f371fdff251\",\"img\":\"/images/ecommerce.gif\",\"title\":\"Django Ecommerce Server\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":true,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/django-ecommerce-server\",\"demoUrl\":\"\",\"desc\":\"Developed a backend ecommerce server using Django\\nFunctions:\\n- Create account\\n- Login to account\\n- View Listing\\n- Create Listing\\n- Bid on Listing\\n- Filter and Watchlist\\n- Filter by Category\",\"order\":9},{\"_id\":\"61b73752d1557f371fdff252\",\"img\":\"/images/social media.gif\",\"title\":\"Django Social Media Server\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":true,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/django-social-media-server\",\"demoUrl\":\"\",\"desc\":\"Developed a backend Social Media server using Django\\n\\nFunctions:\\n- Create account\\n- Login to account\\n- Like / Unlike Posts\\n- Edit Posts\\n- Create Posts\\n- View posts by profile\\n- View posts by follower\",\"order\":10},{\"_id\":\"61ac36d169fb606639ecfea0\",\"img\":\"/images/tictactoe.gif\",\"title\":\"Tic Tac Toe Game\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":true,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/TicTacToe\",\"demoUrl\":\"https://ztjhz.github.io/TicTacToe/\",\"desc\":\"Created a Tic Tac Toe game in JavaScript\",\"order\":11},{\"_id\":\"61b737fcd1557f371fdff253\",\"img\":\"/images/mail.gif\",\"title\":\"Django Mail Server\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":true,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/django-mail-server\",\"demoUrl\":\"\",\"desc\":\"Developed a backend mail server using Django\\n\\nFunctions:\\n- View inbox\\n- Send email\\n- View email\\n- Archive and unarchive email\",\"order\":12},{\"_id\":\"61b73857d1557f371fdff254\",\"img\":\"/images/wiki.gif\",\"title\":\"Django Wiki Server\",\"tags\":{\"language\":{\"Python\":true,\"C\":false,\"JavaScript\":false,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"CSS\":false,\"HTML\":false,\"Django\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":false,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":true,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/django-wiki-server\",\"demoUrl\":\"\",\"desc\":\"Developed a backend wiki server using Django\\n\\nFunctions:\\n- View Wiki Page\\n- Edit Wiki Page\\n- Markdown Support\",\"order\":13},{\"_id\":\"61ac36d169fb606639ecfea1\",\"img\":\"/images/snakegame.gif\",\"title\":\"Snake Game\",\"tags\":{\"language\":{\"Python\":false,\"C\":false,\"JavaScript\":true,\"ReactJS\":false,\"MongoDB\":false,\"ExpressJS\":false,\"NodeJs\":false,\"HTML\":true,\"CSS\":true},\"category\":{\"Algorithms \u0026 Data Structures\":false,\"Automation\":false,\"Games\":true,\"Machine Learning\":false,\"Full Stack\":false,\"Back End\":false,\"Front End\":false}},\"url\":\"https://github.com/ztjhz/snake-game\",\"demoUrl\":\"https://ztjhz.github.io/snake-game/\",\"desc\":\"Created a snake game in JavaScript \",\"order\":14}]",
